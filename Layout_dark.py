from PyQt5.QtWidgets import (
    QApplication, QWidget, QHBoxLayout, QVBoxLayout, QPushButton, 
    QStackedWidget, QLabel, QFrame, QSpacerItem, QSizePolicy
)
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QIcon
import sys

class MainApp(QWidget):
    def __init__(self):
        super().__init__()
        self.dark_mode = False
        self.initUI()

    def initUI(self):
        self.setWindowTitle('√ºPDF')
        self.setGeometry(100, 100, 800, 600)  # Define a posi√ß√£o e tamanho da janela
        
        # Layout vertical principal da janela
        windowLayout = QVBoxLayout(self)
        windowLayout.setContentsMargins(10, 7, 10, 10)  # Remove margens, se necess√°rio
        
        # Layout para o topo (incluindo o bot√£o de toggle do tema)
        topLayout = QHBoxLayout()
        
        # Bot√£o para alternar o tema
        self.bt_dark = QPushButton()
        self.bt_dark.clicked.connect(self.toggle_theme)
        self.bt_dark.setFixedSize(35, 35)  # Ajuste o tamanho conforme necess√°rio
        # Adiciona o bot√£o ao layout horizontal
        topLayout.addWidget(self.bt_dark, alignment=Qt.AlignRight)  # alinha o bot√£o √† direita

        # Cria o layout principal
        layout = QVBoxLayout()
        
        # Cria o layout horizontal para o bot√£o
        button_layout = QHBoxLayout()
                      
        # Adiciona o layout do topo ao layout principal da janela
        windowLayout.addLayout(topLayout)
        
        # Layout principal para o conte√∫do e menu lateral
        mainLayout = QHBoxLayout()
        
        # Layout do menu lateral
        sideMenuLayout = QVBoxLayout()
        sideMenuLayout.setAlignment(Qt.AlignTop)
        
        # Criando um quadro para o menu lateral para separ√°-lo visualamente do conte√∫do
        sideMenuFrame = QFrame()
        sideMenuFrame.setLayout(sideMenuLayout)
        sideMenuFrame.setFixedWidth(200)
        
        # Pilha para o conte√∫do principal
        self.stackedWidget = QStackedWidget()
        
        # Bot√µes para o menu lateral
        buttons = [
            "Abrir PDF", "Abrir XML", "Assinatura digital", "Combinar arquivos PDF",
            "Editar texto PDF", "Extrair p√°ginas por nome", "Exportar p√°ginas em JPG",
            "Exportar p√°ginas em PNG", "Exportar Imagens em PDF", "Renomear em massa",
            "Organizar p√°ginas", "Salvar XML em PDF"
        ]
        
        # Adiciona bot√µes ao layout do menu lateral
        for i, name in enumerate(buttons):
            btn = QPushButton(name)
            sideMenuLayout.addWidget(btn)
            # Cria uma p√°gina de conte√∫do para a pilha
            page = QLabel(f"Conte√∫do para {name}")
            self.stackedWidget.addWidget(page)
            btn.clicked.connect(lambda checked, index=i: self.stackedWidget.setCurrentIndex(index))
        
        # Adiciona o quadro do menu lateral e a pilha ao layout principal
        mainLayout.addWidget(sideMenuFrame)
        mainLayout.addWidget(self.stackedWidget, 1)
        
        # Adiciona o mainLayout ao windowLayout
        windowLayout.addLayout(mainLayout)

        self.setLayout(windowLayout)
        self.toggle_theme()  # Chama para definir o tema inicial

    def toggle_theme(self):
        self.dark_mode = not self.dark_mode
        # Atualiza o texto do bot√£o com base no estado do tema
        self.bt_dark.setText("üåï" if self.dark_mode else "üåô")
        self.bt_dark.setStyleSheet("text-align: center;")
        if self.dark_mode:
            # Aplica o estilo escuro
            self.setStyleSheet("""
                QWidget {
                    background-color: #444444;
                    color: white;
                    border-top-right-radius: 3px;  /* Arredonda o canto superior direito */
                    border-bottom-right-radius: 3px;  /* Arredonda o canto inferior direito */
                    border-top-left-radius: 3px;  /* Arredonda o canto superior esquerdo */
                    border-bottom-left-radius: 3px;  /* Arredonda o canto inferior esquero */
                }
                QFrame {
                    background-color: #333;  /* Mais escuro que o fundo principal */
                    color: white;
                    border-top-right-radius: 10px;  /* Arredonda o canto superior direito */
                    border-bottom-right-radius: 10px;  /* Arredonda o canto inferior direito */
                    border-top-left-radius: 10px;  /* Arredonda o canto superior esquerdo */
                    border-bottom-left-radius: 10px;  /* Arredonda o canto inferior esquero */
                               
                }
                QPushButton {
                    background-color: transparent;
                    border: none;
                    text-align: left;
                    padding: 10px;
                    color: white;  /* Cor da fonte dos bot√µes em modo escuro */
                }
                QPushButton:hover {
                    background-color: rgba(255, 255, 255, 0.1);  /* Fundo mais claro ao passar o mouse */
                }
            """)
        else:
            # Aplica o estilo claro
            self.setStyleSheet("""
                QWidget {
                    background-color: #fff;
                    color: black;
                    border-top-right-radius: 3px;  /* Arredonda o canto superior direito */
                    border-bottom-right-radius: 3px;  /* Arredonda o canto inferior direito */
                    border-top-left-radius: 3px;  /* Arredonda o canto superior esquerdo */
                    border-bottom-left-radius: 3px;  /* Arredonda o canto inferior esquero */
                }
                QFrame {
                    background-color: #e0e0e0;  /* Cor de fundo cinza claro */
                    color: black;
                    border-top-right-radius: 10px;  /* Arredonda o canto superior direito */
                    border-bottom-right-radius: 10px;  /* Arredonda o canto inferior direito */
                    border-top-left-radius: 10px;  /* Arredonda o canto superior esquerdo */
                    border-bottom-left-radius: 10px;  /* Arredonda o canto inferior esquero */
                }
                QPushButton {
                    background-color: transparent;
                    border: none;
                    text-align: left;
                    padding: 10px;
                    color: black;  /* Cor da fonte dos bot√µes em modo claro */
                }
                QPushButton:hover {
                    background-color: rgba(0, 0, 0, 0.05);  /* Fundo mais escuro ao passar o mouse */
                }
            """)

if __name__ == '__main__':
    app = QApplication([])
    mainApp = MainApp()
    mainApp.show()
    sys.exit(app.exec_())
